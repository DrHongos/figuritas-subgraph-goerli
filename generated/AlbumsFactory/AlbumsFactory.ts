// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AlbumClaimed extends ethereum.Event {
  get params(): AlbumClaimed__Params {
    return new AlbumClaimed__Params(this);
  }
}

export class AlbumClaimed__Params {
  _event: AlbumClaimed;

  constructor(event: AlbumClaimed) {
    this._event = event;
  }

  get who(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get albumAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get userAlbumAddress(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class AlbumCreated extends ethereum.Event {
  get params(): AlbumCreated__Params {
    return new AlbumCreated__Params(this);
  }
}

export class AlbumCreated__Params {
  _event: AlbumCreated;

  constructor(event: AlbumCreated) {
    this._event = event;
  }

  get creator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get urlIpfs(): string {
    return this._event.parameters[1].value.toString();
  }

  get albumAddress(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get albumId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get price(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class AlbumsProtocolUpgraded extends ethereum.Event {
  get params(): AlbumsProtocolUpgraded__Params {
    return new AlbumsProtocolUpgraded__Params(this);
  }
}

export class AlbumsProtocolUpgraded__Params {
  _event: AlbumsProtocolUpgraded;

  constructor(event: AlbumsProtocolUpgraded) {
    this._event = event;
  }

  get newImplementation(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class AlbumsFactory extends ethereum.SmartContract {
  static bind(address: Address): AlbumsFactory {
    return new AlbumsFactory("AlbumsFactory", address);
  }

  AlbumCollectionImplementation(): Address {
    let result = super.call(
      "AlbumCollectionImplementation",
      "AlbumCollectionImplementation():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_AlbumCollectionImplementation(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "AlbumCollectionImplementation",
      "AlbumCollectionImplementation():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  AlbumsImplementation(): Address {
    let result = super.call(
      "AlbumsImplementation",
      "AlbumsImplementation():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_AlbumsImplementation(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "AlbumsImplementation",
      "AlbumsImplementation():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  claimAlbum(id: BigInt): Address {
    let result = super.call("claimAlbum", "claimAlbum(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(id)
    ]);

    return result[0].toAddress();
  }

  try_claimAlbum(id: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("claimAlbum", "claimAlbum(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(id)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  createAlbum(
    _creator: Address,
    _urlIpfs: string,
    _ids: Array<BigInt>,
    amounts: Array<BigInt>,
    _freq: Array<BigInt>,
    _price: BigInt
  ): Address {
    let result = super.call(
      "createAlbum",
      "createAlbum(address,string,uint256[],uint256[],uint256[],uint256):(address)",
      [
        ethereum.Value.fromAddress(_creator),
        ethereum.Value.fromString(_urlIpfs),
        ethereum.Value.fromUnsignedBigIntArray(_ids),
        ethereum.Value.fromUnsignedBigIntArray(amounts),
        ethereum.Value.fromUnsignedBigIntArray(_freq),
        ethereum.Value.fromUnsignedBigInt(_price)
      ]
    );

    return result[0].toAddress();
  }

  try_createAlbum(
    _creator: Address,
    _urlIpfs: string,
    _ids: Array<BigInt>,
    amounts: Array<BigInt>,
    _freq: Array<BigInt>,
    _price: BigInt
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "createAlbum",
      "createAlbum(address,string,uint256[],uint256[],uint256[],uint256):(address)",
      [
        ethereum.Value.fromAddress(_creator),
        ethereum.Value.fromString(_urlIpfs),
        ethereum.Value.fromUnsignedBigIntArray(_ids),
        ethereum.Value.fromUnsignedBigIntArray(amounts),
        ethereum.Value.fromUnsignedBigIntArray(_freq),
        ethereum.Value.fromUnsignedBigInt(_price)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getAlbumAddress(id: BigInt): Address {
    let result = super.call(
      "getAlbumAddress",
      "getAlbumAddress(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(id)]
    );

    return result[0].toAddress();
  }

  try_getAlbumAddress(id: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getAlbumAddress",
      "getAlbumAddress(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(id)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getAlbumsLength(): BigInt {
    let result = super.call(
      "getAlbumsLength",
      "getAlbumsLength():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getAlbumsLength(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getAlbumsLength",
      "getAlbumsLength():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ClaimAlbumCall extends ethereum.Call {
  get inputs(): ClaimAlbumCall__Inputs {
    return new ClaimAlbumCall__Inputs(this);
  }

  get outputs(): ClaimAlbumCall__Outputs {
    return new ClaimAlbumCall__Outputs(this);
  }
}

export class ClaimAlbumCall__Inputs {
  _call: ClaimAlbumCall;

  constructor(call: ClaimAlbumCall) {
    this._call = call;
  }

  get id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ClaimAlbumCall__Outputs {
  _call: ClaimAlbumCall;

  constructor(call: ClaimAlbumCall) {
    this._call = call;
  }

  get _clone(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class CreateAlbumCall extends ethereum.Call {
  get inputs(): CreateAlbumCall__Inputs {
    return new CreateAlbumCall__Inputs(this);
  }

  get outputs(): CreateAlbumCall__Outputs {
    return new CreateAlbumCall__Outputs(this);
  }
}

export class CreateAlbumCall__Inputs {
  _call: CreateAlbumCall;

  constructor(call: CreateAlbumCall) {
    this._call = call;
  }

  get _creator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _urlIpfs(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _ids(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get amounts(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }

  get _freq(): Array<BigInt> {
    return this._call.inputValues[4].value.toBigIntArray();
  }

  get _price(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }
}

export class CreateAlbumCall__Outputs {
  _call: CreateAlbumCall;

  constructor(call: CreateAlbumCall) {
    this._call = call;
  }

  get newAlbumAddress(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetAlbumCollectionImplementationCall extends ethereum.Call {
  get inputs(): SetAlbumCollectionImplementationCall__Inputs {
    return new SetAlbumCollectionImplementationCall__Inputs(this);
  }

  get outputs(): SetAlbumCollectionImplementationCall__Outputs {
    return new SetAlbumCollectionImplementationCall__Outputs(this);
  }
}

export class SetAlbumCollectionImplementationCall__Inputs {
  _call: SetAlbumCollectionImplementationCall;

  constructor(call: SetAlbumCollectionImplementationCall) {
    this._call = call;
  }

  get _newAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetAlbumCollectionImplementationCall__Outputs {
  _call: SetAlbumCollectionImplementationCall;

  constructor(call: SetAlbumCollectionImplementationCall) {
    this._call = call;
  }
}

export class SetAlbumsImplementationCall extends ethereum.Call {
  get inputs(): SetAlbumsImplementationCall__Inputs {
    return new SetAlbumsImplementationCall__Inputs(this);
  }

  get outputs(): SetAlbumsImplementationCall__Outputs {
    return new SetAlbumsImplementationCall__Outputs(this);
  }
}

export class SetAlbumsImplementationCall__Inputs {
  _call: SetAlbumsImplementationCall;

  constructor(call: SetAlbumsImplementationCall) {
    this._call = call;
  }

  get _newAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetAlbumsImplementationCall__Outputs {
  _call: SetAlbumsImplementationCall;

  constructor(call: SetAlbumsImplementationCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
